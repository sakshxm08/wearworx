{"ast":null,"code":"var _jsxFileName = \"/Users/sakshamgambhir/Desktop/Work+Projects/Web Development/Projects/Project 12 - WearWorx/client/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n// import { app } from \"../firebase.config\";\n\nimport { google } from \"../assets\";\nimport { useNavigate } from \"react-router-dom\";\nimport UserContext from \"../context/userContext\";\nimport { addUser, db } from \"../firebase/Firebase\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport CartContext from \"../context/cartContext\";\nimport FavContext from \"../context/favContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const cart = useContext(CartContext);\n  const fav = useContext(FavContext);\n  const [loader, setLoader] = useState(false);\n  const navigate = useNavigate();\n  const provider = new GoogleAuthProvider();\n  const authContext = useContext(UserContext);\n  const loginGoogle = () => {\n    signInWithPopup(authContext.auth, provider).then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      // const credential = GoogleAuthProvider.credentialFromResult(result);\n      // const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      authContext.setUser(user);\n      // IdP data available using getAdditionalUserInfo(result)\n      // console.log(authContext.user);\n      // ...\n      return result;\n    }).then(result => doc(db, \"users\", result.user.email)).then(docRef => getDoc(docRef)).then(data => {\n      if (data.exists()) {\n        cart.setCartArray(data.data().cart);\n        fav.setFavArray(data.data().fav);\n      }\n    }).then(navigate(-1, {\n      replace: true\n    })).then(setLoader(false)).catch(error => {\n      console.log(error);\n      // Handle Errors here.\n      // const errorCode = error.code;\n      // const errorMessage = error.message;\n      // The email of the user's account used.\n      // const email = error.customData.email;\n      // The AuthCredential type that was used.\n      // const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n    });\n\n    console.log(authContext);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: loginGoogle,\n      className: \"px-4 py-2 border flex gap-4 justify-center items-center rounded hover:bg-gray-100  duration-200 cursor-pointer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-8\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: google,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-titleFont \",\n        children: \"Sign in With Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), loader ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"tErkhpvCJ4mdmJBkMqkh+HyvQiM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useState","signInWithPopup","GoogleAuthProvider","google","useNavigate","UserContext","addUser","db","doc","getDoc","CartContext","FavContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","cart","fav","loader","setLoader","navigate","provider","authContext","loginGoogle","auth","then","result","user","setUser","email","docRef","data","exists","setCartArray","setFavArray","replace","catch","error","console","log","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sakshamgambhir/Desktop/Work+Projects/Web Development/Projects/Project 12 - WearWorx/client/src/pages/Login.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n// import { app } from \"../firebase.config\";\n\nimport { google } from \"../assets\";\nimport { useNavigate } from \"react-router-dom\";\nimport UserContext from \"../context/userContext\";\nimport { addUser, db } from \"../firebase/Firebase\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport CartContext from \"../context/cartContext\";\nimport FavContext from \"../context/favContext\";\n\nexport const Login = () => {\n  const cart = useContext(CartContext);\n  const fav = useContext(FavContext);\n  const [loader, setLoader] = useState(false);\n  const navigate = useNavigate();\n  const provider = new GoogleAuthProvider();\n\n  const authContext = useContext(UserContext);\n\n  const loginGoogle = () => {\n    signInWithPopup(authContext.auth, provider)\n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        // const credential = GoogleAuthProvider.credentialFromResult(result);\n        // const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        authContext.setUser(user);\n        // IdP data available using getAdditionalUserInfo(result)\n        // console.log(authContext.user);\n        // ...\n        return result;\n      })\n      .then((result) => doc(db, \"users\", result.user.email))\n      .then((docRef) => getDoc(docRef))\n      .then((data) => {\n        if (data.exists()) {\n          cart.setCartArray(data.data().cart);\n          fav.setFavArray(data.data().fav);\n        }\n      })\n      .then(navigate(-1, { replace: true }))\n      .then(setLoader(false))\n      .catch((error) => {\n        console.log(error);\n        // Handle Errors here.\n        // const errorCode = error.code;\n        // const errorMessage = error.message;\n        // The email of the user's account used.\n        // const email = error.customData.email;\n        // The AuthCredential type that was used.\n        // const credential = GoogleAuthProvider.credentialFromError(error);\n        // ...\n      });\n    console.log(authContext);\n  };\n  return (\n    <div className=\"flex justify-center items-center py-10\">\n      <div\n        onClick={loginGoogle}\n        className=\"px-4 py-2 border flex gap-4 justify-center items-center rounded hover:bg-gray-100  duration-200 cursor-pointer\"\n      >\n        <div className=\"w-8\">\n          <img src={google} alt=\"\" />\n        </div>\n        <span className=\"font-titleFont \">Sign in With Google</span>\n      </div>\n      {loader ? <div>Loading...</div> : <></>}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
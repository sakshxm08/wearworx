{"ast":null,"code":"var _jsxFileName = \"/Users/sakshamgambhir/Desktop/Work+Projects/Web Development/Projects/Project 12 - WearWorx/client/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { app } from \"../firebase.config\";\nimport { google } from \"../assets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const provider = new GoogleAuthProvider();\n  const auth = getAuth();\n  const loginGoogle = () => {\n    setLoader(true);\n    signInWithPopup(auth, provider).then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      // const credential = GoogleAuthProvider.credentialFromResult(result);\n      // const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      // IdP data available using getAdditionalUserInfo(result)\n      console.log(user);\n      // ...\n    }).then(setLoader(false)).catch(error => {\n      console.log(error);\n      // Handle Errors here.\n      // const errorCode = error.code;\n      // const errorMessage = error.message;\n      // The email of the user's account used.\n      // const email = error.customData.email;\n      // The AuthCredential type that was used.\n      // const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n    });\n  };\n\n  const [loader, setLoader] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: loginGoogle,\n      className: \"px-4 py-2 border flex gap-4 justify-center items-center rounded hover:bg-gray-100  duration-200 cursor-pointer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-8\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: google,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-titleFont \",\n        children: \"Sign in With Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), loader ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"dcXTTeI1fBa4WU5nkxI/0ViaXOU=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","getAuth","signInWithPopup","GoogleAuthProvider","app","google","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","provider","auth","loginGoogle","setLoader","then","result","user","console","log","catch","error","loader","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sakshamgambhir/Desktop/Work+Projects/Web Development/Projects/Project 12 - WearWorx/client/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { app } from \"../firebase.config\";\nimport { google } from \"../assets\";\n\nexport const Login = () => {\n  const provider = new GoogleAuthProvider();\n  const auth = getAuth();\n  const loginGoogle = () => {\n    setLoader(true);\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        // const credential = GoogleAuthProvider.credentialFromResult(result);\n        // const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        // IdP data available using getAdditionalUserInfo(result)\n        console.log(user);\n        // ...\n      })\n      .then(setLoader(false))\n      .catch((error) => {\n        console.log(error);\n        // Handle Errors here.\n        // const errorCode = error.code;\n        // const errorMessage = error.message;\n        // The email of the user's account used.\n        // const email = error.customData.email;\n        // The AuthCredential type that was used.\n        // const credential = GoogleAuthProvider.credentialFromError(error);\n        // ...\n      });\n  };\n  const [loader, setLoader] = useState(false);\n  return (\n    <div className=\"flex justify-center items-center py-10\">\n      <div\n        onClick={loginGoogle}\n        className=\"px-4 py-2 border flex gap-4 justify-center items-center rounded hover:bg-gray-100  duration-200 cursor-pointer\"\n      >\n        <div className=\"w-8\">\n          <img src={google} alt=\"\" />\n        </div>\n        <span className=\"font-titleFont \">Sign in With Google</span>\n      </div>\n      {loader ? <div>Loading...</div> : <></>}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;AAC5E,SAASC,GAAG,QAAQ,oBAAoB;AACxC,SAASC,MAAM,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAG,IAAIT,kBAAkB,CAAC,CAAC;EACzC,MAAMU,IAAI,GAAGZ,OAAO,CAAC,CAAC;EACtB,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxBC,SAAS,CAAC,IAAI,CAAC;IACfb,eAAe,CAACW,IAAI,EAAED,QAAQ,CAAC,CAC5BI,IAAI,CAAEC,MAAM,IAAK;MAChB;MACA;MACA;MACA;MACA,MAAMC,IAAI,GAAGD,MAAM,CAACC,IAAI;MACxB;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB;IACF,CAAC,CAAC,CACDF,IAAI,CAACD,SAAS,CAAC,KAAK,CAAC,CAAC,CACtBM,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MAClB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,CAAC;EACN,CAAC;;EACD,MAAM,CAACC,MAAM,EAAER,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC3C,oBACEO,OAAA;IAAKiB,SAAS,EAAC,wCAAwC;IAAAC,QAAA,gBACrDlB,OAAA;MACEmB,OAAO,EAAEZ,WAAY;MACrBU,SAAS,EAAC,gHAAgH;MAAAC,QAAA,gBAE1HlB,OAAA;QAAKiB,SAAS,EAAC,KAAK;QAAAC,QAAA,eAClBlB,OAAA;UAAKoB,GAAG,EAAEtB,MAAO;UAACuB,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACNzB,OAAA;QAAMiB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,EACLT,MAAM,gBAAGhB,OAAA;MAAAkB,QAAA,EAAK;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAAGzB,OAAA,CAAAE,SAAA,mBAAI,CAAC;EAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA5CWD,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
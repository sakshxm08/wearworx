{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { doc, getDoc, getFirestore, setDoc, updateDoc } from \"firebase/firestore\";\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\n// Required for side-effects\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCS7dNZAYmYEJA6GXKcxtioz_KhtCN0AT4\",\n  authDomain: \"wearworx-sakshxm08.firebaseapp.com\",\n  projectId: \"wearworx-sakshxm08\",\n  storageBucket: \"wearworx-sakshxm08.appspot.com\",\n  messagingSenderId: \"939214306183\",\n  appId: \"1:939214306183:web:4bc74908c5d6ef682ef122\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n\n// Get Users\nconst users = [];\nconst data = await getDocs(collection(db, \"users\"));\nif (data) {\n  data.forEach(item => {\n    users.push(item.data());\n  });\n}\nexport { users };\nexport const addUser = async (user, cart, fav) => {\n  try {\n    if (!users.find(userEmail => userEmail.email === user.email)) {\n      await setDoc(doc(db, \"users\", user.email), {\n        name: user.displayName,\n        email: user.email,\n        cart: cart,\n        fav: fav\n      });\n      // console.log(\"Document written with ID: \", docRef.id);\n    } else if (!users.find(userCart => userCart.cart === cart)) {\n      await updateDoc(doc(db, \"users\", user.email), {\n        cart: cart\n      });\n    } else if (!users.find(userFav => userFav.fav === user.fav)) {\n      await updateDoc(doc(db, \"users\", user.email), {\n        fav: fav\n      });\n    }\n    console.log(users);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n  }\n};\nexport const getCartData = async user => {\n  const userCart = [];\n  const userFav = [];\n  const docRef = doc(db, \"users\", user.email);\n  const data = await getDoc(docRef);\n  if (data.exists()) {\n    userCart.push(data.data().cart);\n    userFav.push(data.data().fav);\n    console.log(userCart, userFav);\n  } else console.log(\"no data\");\n};","map":{"version":3,"names":["initializeApp","doc","getDoc","getFirestore","setDoc","updateDoc","collection","addDoc","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","db","users","data","forEach","item","push","addUser","user","cart","fav","find","userEmail","email","name","displayName","userCart","userFav","console","log","e","error","getCartData","docRef","exists"],"sources":["/Users/sakshamgambhir/Desktop/Work+Projects/Web Development/Projects/Project 12 - WearWorx/client/src/firebase/Firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {\n  doc,\n  getDoc,\n  getFirestore,\n  setDoc,\n  updateDoc,\n} from \"firebase/firestore\";\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\n// Required for side-effects\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCS7dNZAYmYEJA6GXKcxtioz_KhtCN0AT4\",\n  authDomain: \"wearworx-sakshxm08.firebaseapp.com\",\n  projectId: \"wearworx-sakshxm08\",\n  storageBucket: \"wearworx-sakshxm08.appspot.com\",\n  messagingSenderId: \"939214306183\",\n  appId: \"1:939214306183:web:4bc74908c5d6ef682ef122\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n\n// Get Users\nconst users = [];\nconst data = await getDocs(collection(db, \"users\"));\nif (data) {\n  data.forEach((item) => {\n    users.push(item.data());\n  });\n}\nexport { users };\nexport const addUser = async (user, cart, fav) => {\n  try {\n    if (!users.find((userEmail) => userEmail.email === user.email)) {\n      await setDoc(doc(db, \"users\", user.email), {\n        name: user.displayName,\n        email: user.email,\n        cart: cart,\n        fav: fav,\n      });\n      // console.log(\"Document written with ID: \", docRef.id);\n    } else if (!users.find((userCart) => userCart.cart === cart)) {\n      await updateDoc(doc(db, \"users\", user.email), {\n        cart: cart,\n      });\n    } else if (!users.find((userFav) => userFav.fav === user.fav)) {\n      await updateDoc(doc(db, \"users\", user.email), {\n        fav: fav,\n      });\n    }\n    console.log(users);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n  }\n};\nexport const getCartData = async (user) => {\n  const userCart = [];\n  const userFav = [];\n  const docRef = doc(db, \"users\", user.email);\n  const data = await getDoc(docRef);\n  if (data.exists()) {\n    userCart.push(data.data().cart);\n    userFav.push(data.data().fav);\n    console.log(userCart, userFav);\n  } else console.log(\"no data\");\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, signOut } from \"firebase/auth\";\nimport { getFirestore, query, getDocs, collection, where, addDoc } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCS7dNZAYmYEJA6GXKcxtioz_KhtCN0AT4\",\n  authDomain: \"wearworx-sakshxm08.firebaseapp.com\",\n  projectId: \"wearworx-sakshxm08\",\n  storageBucket: \"wearworx-sakshxm08.appspot.com\",\n  messagingSenderId: \"939214306183\",\n  appId: \"1:939214306183:web:4bc74908c5d6ef682ef122\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\n// Get Users\nconst users = [];\nconst data = await getDocs(collection(db, \"users\"));\nif (data) {\n  data.forEach(item => {\n    users.push(item.data());\n  });\n}\nexport { users };\nexport const addUser = async (user, cart, fav) => {\n  try {\n    if (!users.find(userEmail => userEmail.email === user.email)) {\n      await setDoc(doc(db, \"users\", user.email), {\n        name: user.displayName,\n        email: user.email,\n        cart: cart,\n        fav: fav\n      });\n      // console.log(\"Document written with ID: \", docRef.id);\n    } else if (!users.find(userCart => userCart.cart === cart)) {\n      await updateDoc(doc(db, \"users\", user.email), {\n        cart: cart\n      });\n    } else if (!users.find(userFav => userFav.fav === user.fav)) {\n      await updateDoc(doc(db, \"users\", user.email), {\n        fav: fav\n      });\n    }\n    console.log(users);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n  }\n};\nexport const getCartData = async user => {\n  const userCart = [];\n  const userFav = [];\n  const docRef = doc(db, \"users\", user.email);\n  const data = await getDoc(docRef);\n  if (data.exists()) {\n    userCart.push(data.data().cart);\n    userFav.push(data.data().fav);\n    console.log(userCart, userFav);\n  } else console.log(\"no data\");\n};","map":{"version":3,"names":["initializeApp","GoogleAuthProvider","getAuth","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","getFirestore","query","getDocs","collection","where","addDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","db","users","data","forEach","item","push","addUser","user","cart","fav","find","userEmail","email","setDoc","doc","name","displayName","userCart","updateDoc","userFav","console","log","e","error","getCartData","docRef","getDoc","exists"],"sources":["/Users/sakshamgambhir/Desktop/Work+Projects/Web Development/Projects/Project 12 - WearWorx/client/src/firebase/Firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCS7dNZAYmYEJA6GXKcxtioz_KhtCN0AT4\",\n  authDomain: \"wearworx-sakshxm08.firebaseapp.com\",\n  projectId: \"wearworx-sakshxm08\",\n  storageBucket: \"wearworx-sakshxm08.appspot.com\",\n  messagingSenderId: \"939214306183\",\n  appId: \"1:939214306183:web:4bc74908c5d6ef682ef122\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\n// Get Users\nconst users = [];\nconst data = await getDocs(collection(db, \"users\"));\nif (data) {\n  data.forEach((item) => {\n    users.push(item.data());\n  });\n}\nexport { users };\nexport const addUser = async (user, cart, fav) => {\n  try {\n    if (!users.find((userEmail) => userEmail.email === user.email)) {\n      await setDoc(doc(db, \"users\", user.email), {\n        name: user.displayName,\n        email: user.email,\n        cart: cart,\n        fav: fav,\n      });\n      // console.log(\"Document written with ID: \", docRef.id);\n    } else if (!users.find((userCart) => userCart.cart === cart)) {\n      await updateDoc(doc(db, \"users\", user.email), {\n        cart: cart,\n      });\n    } else if (!users.find((userFav) => userFav.fav === user.fav)) {\n      await updateDoc(doc(db, \"users\", user.email), {\n        fav: fav,\n      });\n    }\n    console.log(users);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n  }\n};\nexport const getCartData = async (user) => {\n  const userCart = [];\n  const userFav = [];\n  const docRef = doc(db, \"users\", user.email);\n  const data = await getDoc(docRef);\n  if (data.exists()) {\n    userCart.push(data.data().cart);\n    userFav.push(data.data().fav);\n    console.log(userCart, userFav);\n  } else console.log(\"no data\");\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}